# k8s/deployment.yaml
# ----------------------------------------------------------------------
# 1. KUBERNETES DEPLOYMENT: Defines your Spring Boot application Pods
# ----------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app-deployment
  labels:
    app: springboot-microservice
spec:
  # Maintain 2 replicas (copies) of your application at all times
  replicas: 2
  selector:
    matchLabels:
      app: springboot-microservice
  template:
    metadata:
      labels:
        app: springboot-microservice
    spec:
      containers:
        - name: springboot-app-container
          # ⚠️ CRITICAL: Full ECR URI including region
          # <PLACEHOLDER_TAG> is automatically replaced by buildspec.yml
          image: 961581626265.dkr.ecr.ap-south-1.amazonaws.com/springboot-restful-webservices:<PLACEHOLDER_TAG>
          ports:
            - containerPort: 8080 # The internal port your Spring Boot app listens on

---
# ----------------------------------------------------------------------
# 2. KUBERNETES SERVICE: Exposes the Deployment using an AWS Load Balancer
# ----------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: springboot-app-service
  labels:
    app: springboot-microservice
spec:
  # 'LoadBalancer' type creates an AWS Classic Load Balancer to expose the app publicly
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80         # The port exposed externally (e.g., accessed via browser)
      targetPort: 8080 # The port inside the container (8080)
  selector:
    app: springboot-microservice # Selects the Pods created by the Deployment above
